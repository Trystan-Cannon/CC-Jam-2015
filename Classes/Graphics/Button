--[[
    Button          Trystan Cannon
                    20 June 2015

        Simple button class that is a child
    of the GraphicalObject class, making it usable
    throughout the Layers system.
]]
--Loading APIs------------------------------------
if not GraphicalObject then
    os.loadAPI("/Layers/Classes/Graphics/GraphicalObject")
end

GraphicalObject.setChild(getfenv())
local tButtonMetatable = { __index = getfenv() }
--render------------------------------------------
function render(self)
    term.setBackgroundColor(self.nBackColor)
    term.setTextColor(self.nTextColor)

    -- Draw the background for the button.
    for y = self:getY(), self:getHeight() + 1 do
        term.setCursorPos(self:getX(), y)
        term.write(string.rep(" ", self:getWidth()))
    end

    local sLabel  = self.sLabel
    local nWidth  = self:getWidth()
    local nHeight = self:getHeight()
    local y       = self:getY()
    local x       = self:getX()
    local tText   = GraphicalObject.wrapText(sLabel, nWidth)

    for nLine = 1, math.min(nHeight, #tText) do
        term.setCursorPos(x, y + nLine - (self.bBorderVertically and 0 or 1))
        term.write(tText[nLine])
    end
end
--act---------------------------------------------
--[[
    By default, this is called when this button is
    clicked.
]]
function act(self, ...)
end
--uppdate-----------------------------------------
function update(self, ...)
    local tEventData = { ... }

    if tEventData[1] == "mouse_click" and self:wasClicked(tEventData[3], tEventData[4]) then
        self:act(...)
    end
end
--new---------------------------------------------
--[[
    Creates and returns a new button object.

    NOTE:
        Button labels that exceed the width of the
        button are wrapped down the button as long
        as there is enough vertical space.

    @constructor
]]
function new(x, y, nWidth, nHeight, sLabel, nTextColor, nBackColor, bBorderVertically)
    local self = setmetatable(GraphicalObject.new(x, y, nWidth, nHeight), tButtonMetatable)

    self.sLabel            = sLabel or "Button"
    self.nTextColor        = nTextColor or colors.black
    self.nBackColor        = nBackColor or colors.white
    self.bBorderVertically = bBorderVertically

    return self
end
--------------------------------------------------